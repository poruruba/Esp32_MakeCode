#ifndef _BMPFONT5X5_H_
#define _BMPFONT5X5_H_

#ifdef __AVR__
 #include <avr/io.h>
 #include <avr/pgmspace.h>
#else
 #define PROGMEM
#endif

const uint8_t bmpfont_5x5[] PROGMEM = {
	0x1f, 0x1f, 0x1f, 0x1f, 0x1f, //  
	0x00, 0x00, 0x17, 0x00, 0x00, // !
	0x00, 0x01, 0x01, 0x00, 0x00, // "
	0x0a, 0x1f, 0x0a, 0x1f, 0x0a, // #
	0x17, 0x15, 0x1f, 0x15, 0x1d, // $
	0x13, 0x0b, 0x04, 0x1a, 0x19, // %
	0x1b, 0x17, 0x14, 0x08, 0x14, // &
	0x00, 0x00, 0x01, 0x00, 0x00, // '
	0x00, 0x0e, 0x11, 0x00, 0x00, // (
	0x00, 0x00, 0x11, 0x0e, 0x00, // )
	0x00, 0x0a, 0x04, 0x0a, 0x00, // *
	0x00, 0x04, 0x0e, 0x04, 0x00, // +
	0x00, 0x10, 0x08, 0x00, 0x00, // ,
	0x00, 0x04, 0x04, 0x04, 0x00, // -
	0x00, 0x00, 0x10, 0x00, 0x00, // .
	0x00, 0x18, 0x04, 0x03, 0x00, // /

	0x0E, 0x11, 0x11, 0x11, 0x0E, // 0
	0x00, 0x01, 0x1F, 0x00, 0x00, // 1
	0x12, 0x19, 0x15, 0x12, 0x00, // 2
	0x11, 0x15, 0x15, 0x1F, 0x00, // 3
	0x07, 0x04, 0x04, 0x1F, 0x00, // 4
	0x16, 0x15, 0x15, 0x1D, 0x00, // 5
	0x1F, 0x15, 0x15, 0x1D, 0x00, // 6
	0x11, 0x09, 0x05, 0x03, 0x00, // 7
	0x1B, 0x15, 0x15, 0x1B, 0x00, // 8
	0x17, 0x15, 0x15, 0x1F, 0x00, // 9

	0x00, 0x00, 0x0a, 0x00, 0x00, // :
	0x00, 0x10, 0x0a, 0x00, 0x00, // ;
	0x00, 0x04, 0x0a, 0x11, 0x00, // <
	0x00, 0x0a, 0x0a, 0x0a, 0x00, // =
	0x00, 0x11, 0x0a, 0x04, 0x00, // >
	0x03, 0x01, 0x15, 0x05, 0x03, // ?
	0x0e, 0x11, 0x1d, 0x1d, 0x16, // @

	0x1F, 0x05, 0x05, 0x05, 0x1F, // a
	0x1F, 0x15, 0x15, 0x15, 0x0E, // b
	0x1F, 0x11, 0x11, 0x11, 0x11, // c
	0x1F, 0x11, 0x11, 0x11, 0x0E, // d
	0x1F, 0x15, 0x15, 0x15, 0x11, // e
	0x1F, 0x05, 0x05, 0x05, 0x01, // f
	0x1F, 0x11, 0x15, 0x15, 0x1D, // g
	0x1F, 0x04, 0x04, 0x04, 0x1F, // h
	0x11, 0x11, 0x1F, 0x11, 0x11, // i
	0x19, 0x11, 0x1F, 0x01, 0x00, // j
	0x1F, 0x04, 0x0A, 0x11, 0x00, // k
	0x1F, 0x10, 0x10, 0x10, 0x00, // l
	0x1F, 0x02, 0x04, 0x02, 0x1F, // m
	0x1F, 0x02, 0x04, 0x08, 0x1F, // n
	0x1F, 0x11, 0x11, 0x11, 0x1F, // o
	0x1F, 0x05, 0x05, 0x05, 0x07, // p
	0x1F, 0x11, 0x11, 0x19, 0x1F, // q
	0x1F, 0x05, 0x05, 0x0D, 0x17, // r
	0x17, 0x15, 0x15, 0x15, 0x1D, // s
	0x01, 0x01, 0x1F, 0x01, 0x01, // t
	0x1F, 0x10, 0x10, 0x10, 0x1F, // u
	0x03, 0x0C, 0x10, 0x0C, 0x03, // v
	0x1F, 0x10, 0x08, 0x10, 0x1F, // w
	0x11, 0x0A, 0x04, 0x0A, 0x11, // x
	0x01, 0x02, 0x1C, 0x02, 0x01, // y
	0x11, 0x19, 0x15, 0x13, 0x11, // z

	0x00, 0x1f, 0x11, 0x00, 0x00, // [
	0x00, 0x03, 0x04, 0x18, 0x00, // 
	0x00, 0x00, 0x11, 0x1f, 0x00, // ]
	0x00, 0x02, 0x01, 0x02, 0x00, // ^
	0x10, 0x10, 0x10, 0x10, 0x10, // _
	0x00, 0x01, 0x02, 0x00, 0x00, // `

	0x1F, 0x05, 0x05, 0x05, 0x1F, // a
	0x1F, 0x15, 0x15, 0x15, 0x0E, // b
	0x1F, 0x11, 0x11, 0x11, 0x11, // c
	0x1F, 0x11, 0x11, 0x11, 0x0E, // d
	0x1F, 0x15, 0x15, 0x15, 0x11, // e
	0x1F, 0x05, 0x05, 0x05, 0x01, // f
	0x1F, 0x11, 0x15, 0x15, 0x1D, // g
	0x1F, 0x04, 0x04, 0x04, 0x1F, // h
	0x11, 0x11, 0x1F, 0x11, 0x11, // i
	0x19, 0x11, 0x1F, 0x01, 0x00, // j
	0x1F, 0x04, 0x0A, 0x11, 0x00, // k
	0x1F, 0x10, 0x10, 0x10, 0x00, // l
	0x1F, 0x02, 0x04, 0x02, 0x1F, // m
	0x1F, 0x02, 0x04, 0x08, 0x1F, // n
	0x1F, 0x11, 0x11, 0x11, 0x1F, // o
	0x1F, 0x05, 0x05, 0x05, 0x07, // p
	0x1F, 0x11, 0x11, 0x19, 0x1F, // q
	0x1F, 0x05, 0x05, 0x0D, 0x17, // r
	0x17, 0x15, 0x15, 0x15, 0x1D, // s
	0x01, 0x01, 0x1F, 0x01, 0x01, // t
	0x1F, 0x10, 0x10, 0x10, 0x1F, // u
	0x03, 0x0C, 0x10, 0x0C, 0x03, // v
	0x1F, 0x10, 0x08, 0x10, 0x1F, // w
	0x11, 0x0A, 0x04, 0x0A, 0x11, // x
	0x01, 0x02, 0x1C, 0x02, 0x01, // y
	0x11, 0x19, 0x15, 0x13, 0x11, // z
	
	0x00, 0x04, 0x0e, 0x11, 0x00, // {
	0x00, 0x00, 0x1f, 0x00, 0x00, // |
	0x00, 0x11, 0x0e, 0x04, 0x00, // }
	0x00, 0x02, 0x06, 0x04, 0x00, // ~	
};

#endif
